{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dahne\\\\Resume\\\\soggy-bread\\\\client\\\\src\\\\components\\\\computer\\\\ChatComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./css/ChatComponent.css\";\nimport { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatComponent = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    // Adjust the scroll position directly to the bottom of the messages display\n    const messagesDisplay = document.querySelector('.messages-display');\n    if (messagesDisplay) {\n      messagesDisplay.scrollTop = messagesDisplay.scrollHeight;\n    }\n  }, [messages]);\n\n  //   const handleSendMessage = async () => {\n  //     if (inputMessage.trim()) {\n  //       const userMessage = { sender: \"user\", text: inputMessage };\n  //       setMessages([...messages, userMessage]);\n  //       setInputMessage(\"\");\n\n  //       try {\n  //         const response = await fetch('http://localhost:3001/generate-response', {\n  //           method: 'POST',\n  //           headers: {\n  //             'Content-Type': 'application/json',\n  //           },\n  //           body: JSON.stringify({ userInput: inputMessage }),\n  //         });\n\n  //         if (!response.ok) {\n  //           throw new Error('Response not ok');\n  //         }\n\n  //         const data = await response.json();\n  //         setMessages(prevMessages => [\n  //           ...prevMessages,\n  //           { sender: \"ai\", text: data.aiResponse },\n  //         ]);\n  //       } catch (error) {\n  //         console.error(\"Failed to fetch AI response:\", error);\n  //       }\n  //     }\n  //   };\n  const handleSendMessage = () => {\n    if (inputMessage.trim()) {\n      // Add user message to messages array\n      setMessages([...messages, {\n        sender: \"user\",\n        text: inputMessage\n      }]);\n      // Generate AI response and add to messages array\n      setTimeout(() => {\n        const aiResponse = generateAIResponse(inputMessage);\n        setMessages(prevMessages => [...prevMessages, {\n          sender: \"ai\",\n          text: aiResponse\n        }]);\n      }, 1000);\n      setInputMessage(\"\");\n    }\n  };\n  const generateAIResponse = userInput => {\n    // This is where you'd implement AI response logic\n\n    return `${userInput}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"DAN I.M.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-close\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/computer\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-display\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-container ${message.sender}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message-sender\",\n          children: message.sender === 'user' ? 'You' : 'Ashley'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender}`,\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 5\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 3\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputMessage,\n        onChange: e => setInputMessage(e.target.value),\n        onKeyPress: e => e.key === \"Enter\" && handleSendMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatComponent, \"Jy4C1k6Z643MsIsxwjhxJh2aV4s=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","ChatComponent","_s","messages","setMessages","inputMessage","setInputMessage","messagesEndRef","messagesDisplay","document","querySelector","scrollTop","scrollHeight","handleSendMessage","trim","sender","text","setTimeout","aiResponse","generateAIResponse","prevMessages","userInput","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","map","message","index","ref","type","value","onChange","e","target","onKeyPress","key","onClick","_c","$RefreshReg$"],"sources":["C:/Users/dahne/Resume/soggy-bread/client/src/components/computer/ChatComponent.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./css/ChatComponent.css\";\r\nimport { useRef, useEffect } from \"react\";\r\n\r\nconst ChatComponent = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState(\"\");\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Adjust the scroll position directly to the bottom of the messages display\r\n    const messagesDisplay = document.querySelector('.messages-display');\r\n    if (messagesDisplay) {\r\n      messagesDisplay.scrollTop = messagesDisplay.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n  \r\n//   const handleSendMessage = async () => {\r\n//     if (inputMessage.trim()) {\r\n//       const userMessage = { sender: \"user\", text: inputMessage };\r\n//       setMessages([...messages, userMessage]);\r\n//       setInputMessage(\"\");\r\n  \r\n//       try {\r\n//         const response = await fetch('http://localhost:3001/generate-response', {\r\n//           method: 'POST',\r\n//           headers: {\r\n//             'Content-Type': 'application/json',\r\n//           },\r\n//           body: JSON.stringify({ userInput: inputMessage }),\r\n//         });\r\n  \r\n//         if (!response.ok) {\r\n//           throw new Error('Response not ok');\r\n//         }\r\n  \r\n//         const data = await response.json();\r\n//         setMessages(prevMessages => [\r\n//           ...prevMessages,\r\n//           { sender: \"ai\", text: data.aiResponse },\r\n//         ]);\r\n//       } catch (error) {\r\n//         console.error(\"Failed to fetch AI response:\", error);\r\n//       }\r\n//     }\r\n//   };\r\n  const handleSendMessage = () => {\r\n    if (inputMessage.trim()) {\r\n      // Add user message to messages array\r\n      setMessages([...messages, { sender: \"user\", text: inputMessage }]);\r\n      // Generate AI response and add to messages array\r\n      setTimeout(() => {\r\n        const aiResponse = generateAIResponse(inputMessage);\r\n        setMessages((prevMessages) => [\r\n          ...prevMessages,\r\n          { sender: \"ai\", text: aiResponse },\r\n        ]);\r\n      }, 1000);\r\n      setInputMessage(\"\");\r\n    }\r\n  };\r\n\r\n  const generateAIResponse = (userInput) => {\r\n    // This is where you'd implement AI response logic\r\n\r\n    return `${userInput}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n        <div className=\"chat-header\">\r\n            <h2>DAN I.M.</h2>\r\n            <div className=\"chat-close\">\r\n                <a href=\"/computer\">X</a>\r\n                </div>\r\n        </div>\r\n      <div className=\"messages-display\">\r\n      {messages.map((message, index) => (\r\n  <div key={index} className={`message-container ${message.sender}`}>\r\n    <p className=\"message-sender\">{message.sender === 'user' ? 'You' : 'Ashley'}</p>\r\n    <div className={`message ${message.sender}`}>\r\n      {message.text}\r\n    </div>\r\n  </div>\r\n))}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      <div className=\"message-input\">\r\n        <input\r\n          type=\"text\"\r\n          value={inputMessage}\r\n          onChange={(e) => setInputMessage(e.target.value)}\r\n          onKeyPress={(e) => e.key === \"Enter\" && handleSendMessage()}\r\n        />\r\n        <button onClick={handleSendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,yBAAyB;AAChC,SAASC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMW,cAAc,GAAGV,MAAM,CAAC,IAAI,CAAC;EAEnCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,eAAe,GAAGC,QAAQ,CAACC,aAAa,CAAC,mBAAmB,CAAC;IACnE,IAAIF,eAAe,EAAE;MACnBA,eAAe,CAACG,SAAS,GAAGH,eAAe,CAACI,YAAY;IAC1D;EACF,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;;EAEhB;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACE,MAAMU,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIR,YAAY,CAACS,IAAI,CAAC,CAAC,EAAE;MACvB;MACAV,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;QAAEY,MAAM,EAAE,MAAM;QAAEC,IAAI,EAAEX;MAAa,CAAC,CAAC,CAAC;MAClE;MACAY,UAAU,CAAC,MAAM;QACf,MAAMC,UAAU,GAAGC,kBAAkB,CAACd,YAAY,CAAC;QACnDD,WAAW,CAAEgB,YAAY,IAAK,CAC5B,GAAGA,YAAY,EACf;UAAEL,MAAM,EAAE,IAAI;UAAEC,IAAI,EAAEE;QAAW,CAAC,CACnC,CAAC;MACJ,CAAC,EAAE,IAAI,CAAC;MACRZ,eAAe,CAAC,EAAE,CAAC;IACrB;EACF,CAAC;EAED,MAAMa,kBAAkB,GAAIE,SAAS,IAAK;IACxC;;IAEA,OAAQ,GAAEA,SAAU,EAAC;EACvB,CAAC;EAED,oBACErB,OAAA;IAAKsB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BvB,OAAA;MAAKsB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACxBvB,OAAA;QAAAuB,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjB3B,OAAA;QAAKsB,SAAS,EAAC,YAAY;QAAAC,QAAA,eACvBvB,OAAA;UAAG4B,IAAI,EAAC,WAAW;UAAAL,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACR3B,OAAA;MAAKsB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,GAChCpB,QAAQ,CAAC0B,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACjC/B,OAAA;QAAiBsB,SAAS,EAAG,qBAAoBQ,OAAO,CAACf,MAAO,EAAE;QAAAQ,QAAA,gBAChEvB,OAAA;UAAGsB,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAEO,OAAO,CAACf,MAAM,KAAK,MAAM,GAAG,KAAK,GAAG;QAAQ;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChF3B,OAAA;UAAKsB,SAAS,EAAG,WAAUQ,OAAO,CAACf,MAAO,EAAE;UAAAQ,QAAA,EACzCO,OAAO,CAACd;QAAI;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC;MAAA,GAJEI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACN,CAAC,eACM3B,OAAA;QAAKgC,GAAG,EAAEzB;MAAe;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACN3B,OAAA;MAAKsB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BvB,OAAA;QACEiC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE7B,YAAa;QACpB8B,QAAQ,EAAGC,CAAC,IAAK9B,eAAe,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACjDI,UAAU,EAAGF,CAAC,IAAKA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAI1B,iBAAiB,CAAC;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC,eACF3B,OAAA;QAAQwC,OAAO,EAAE3B,iBAAkB;QAAAU,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzB,EAAA,CA9FID,aAAa;AAAAwC,EAAA,GAAbxC,aAAa;AAgGnB,eAAeA,aAAa;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}