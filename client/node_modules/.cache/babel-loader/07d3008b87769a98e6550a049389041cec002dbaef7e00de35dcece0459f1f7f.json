{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dahne\\\\Resume\\\\soggy-bread\\\\client\\\\src\\\\components\\\\computer\\\\ChatComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./css/ChatComponent.css\";\nimport { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypingIndicator = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"typing-indicator\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 7\n  }, this);\n};\n_c = TypingIndicator;\nconst ChatComponent = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    // Adjust the scroll position directly to the bottom of the messages display\n    const messagesDisplay = document.querySelector('.messages-display');\n    if (messagesDisplay) {\n      messagesDisplay.scrollTop = messagesDisplay.scrollHeight;\n    }\n  }, [messages]);\n  const handleSendMessage = async () => {\n    if (inputMessage.trim()) {\n      const userMessage = {\n        sender: \"user\",\n        text: inputMessage\n      };\n      setMessages([...messages, userMessage]);\n      setInputMessage(\"\");\n      try {\n        const response = await fetch('http://localhost:3001/generate-response', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userInput: inputMessage\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Response not ok');\n        }\n        const data = await response.json();\n        setMessages(prevMessages => [...prevMessages, {\n          sender: \"ai\",\n          text: data.aiResponse\n        }]);\n      } catch (error) {\n        console.error(\"Failed to fetch AI response:\", error);\n      }\n    }\n  };\n  //   const handleSendMessage = () => {\n  //     if (inputMessage.trim()) {\n  //       // Add user message to messages array\n  //       setMessages([...messages, { sender: \"user\", text: inputMessage }]);\n  //       // Generate AI response and add to messages array\n  //       setTimeout(() => {\n  //         const aiResponse = generateAIResponse(inputMessage);\n  //         setMessages((prevMessages) => [\n  //           ...prevMessages,\n  //           { sender: \"ai\", text: aiResponse },\n  //         ]);\n  //       }, 1000);\n  //       setInputMessage(\"\");\n  //     }\n  //   };\n\n  //   const generateAIResponse = (userInput) => {\n  //     // This is where you'd implement AI response logic\n\n  //     return `${userInput}`;\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"DAN I.M.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-close\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/computer\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-display\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-container ${message.sender}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message-sender\",\n          children: message.sender === 'user' ? 'You' : 'Ashley'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender}`,\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 5\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 3\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputMessage,\n        onChange: e => setInputMessage(e.target.value),\n        onKeyPress: e => e.key === \"Enter\" && handleSendMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatComponent, \"AO2Tt+m5e4K00vd1NZCanc6qqaA=\");\n_c2 = ChatComponent;\nexport default ChatComponent;\nvar _c, _c2;\n$RefreshReg$(_c, \"TypingIndicator\");\n$RefreshReg$(_c2, \"ChatComponent\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","TypingIndicator","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","ChatComponent","_s","messages","setMessages","inputMessage","setInputMessage","isTyping","setIsTyping","messagesEndRef","messagesDisplay","document","querySelector","scrollTop","scrollHeight","handleSendMessage","trim","userMessage","sender","text","response","fetch","method","headers","body","JSON","stringify","userInput","ok","Error","data","json","prevMessages","aiResponse","error","console","href","map","message","index","ref","type","value","onChange","e","target","onKeyPress","key","onClick","_c2","$RefreshReg$"],"sources":["C:/Users/dahne/Resume/soggy-bread/client/src/components/computer/ChatComponent.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./css/ChatComponent.css\";\r\nimport { useRef, useEffect } from \"react\";\r\n\r\nconst TypingIndicator = () => {\r\n    return (\r\n      <div className=\"typing-indicator\">\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    );\r\n  };\r\n\r\nconst ChatComponent = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState(\"\");\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Adjust the scroll position directly to the bottom of the messages display\r\n    const messagesDisplay = document.querySelector('.messages-display');\r\n    if (messagesDisplay) {\r\n      messagesDisplay.scrollTop = messagesDisplay.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n  \r\n  const handleSendMessage = async () => {\r\n    if (inputMessage.trim()) {\r\n      const userMessage = { sender: \"user\", text: inputMessage };\r\n      setMessages([...messages, userMessage]);\r\n      setInputMessage(\"\");\r\n  \r\n      try {\r\n        const response = await fetch('http://localhost:3001/generate-response', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ userInput: inputMessage }),\r\n        });\r\n  \r\n        if (!response.ok) {\r\n          throw new Error('Response not ok');\r\n        }\r\n  \r\n        const data = await response.json();\r\n        setMessages(prevMessages => [\r\n          ...prevMessages,\r\n          { sender: \"ai\", text: data.aiResponse },\r\n        ]);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch AI response:\", error);\r\n      }\r\n    }\r\n  };\r\n//   const handleSendMessage = () => {\r\n//     if (inputMessage.trim()) {\r\n//       // Add user message to messages array\r\n//       setMessages([...messages, { sender: \"user\", text: inputMessage }]);\r\n//       // Generate AI response and add to messages array\r\n//       setTimeout(() => {\r\n//         const aiResponse = generateAIResponse(inputMessage);\r\n//         setMessages((prevMessages) => [\r\n//           ...prevMessages,\r\n//           { sender: \"ai\", text: aiResponse },\r\n//         ]);\r\n//       }, 1000);\r\n//       setInputMessage(\"\");\r\n//     }\r\n//   };\r\n\r\n//   const generateAIResponse = (userInput) => {\r\n//     // This is where you'd implement AI response logic\r\n\r\n//     return `${userInput}`;\r\n//   };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n        <div className=\"chat-header\">\r\n            <h2>DAN I.M.</h2>\r\n            <div className=\"chat-close\">\r\n                <a href=\"/computer\">X</a>\r\n                </div>\r\n        </div>\r\n      <div className=\"messages-display\">\r\n      {messages.map((message, index) => (\r\n  <div key={index} className={`message-container ${message.sender}`}>\r\n    <p className=\"message-sender\">{message.sender === 'user' ? 'You' : 'Ashley'}</p>\r\n    <div className={`message ${message.sender}`}>\r\n      {message.text}\r\n    </div>\r\n  </div>\r\n))}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      <div className=\"message-input\">\r\n        <input\r\n          type=\"text\"\r\n          value={inputMessage}\r\n          onChange={(e) => setInputMessage(e.target.value)}\r\n          onKeyPress={(e) => e.key === \"Enter\" && handleSendMessage()}\r\n        />\r\n        <button onClick={handleSendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}