{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dahne\\\\Resume\\\\soggy-bread\\\\client\\\\src\\\\components\\\\mirror\\\\MyFaceOverlay.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport Webcam from 'react-webcam';\nimport * as faceapi from 'face-api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyFaceOverlayComponent = () => {\n  _s();\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const handleVideoOnPlay = () => {\n    setInterval(async () => {\n      if (webcamRef.current && webcamRef.current.video.readyState === 4) {\n        const video = webcamRef.current.video;\n        const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks();\n\n        // Get the context of the canvas\n        const ctx = canvasRef.current.getContext('2d');\n        canvasRef.current.width = video.videoWidth;\n        canvasRef.current.height = video.videoHeight;\n\n        // Clear the canvas\n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n        // Draw detections or overlay image based on detections\n        detections.forEach(detection => {\n          // Example: draw a rectangle around detected faces\n          // You would replace this with drawing your face image\n          const {\n            x,\n            y,\n            width,\n            height\n          } = detection.detection.box;\n          ctx.strokeStyle = \"#ff0000\";\n          ctx.lineWidth = 2;\n          ctx.strokeRect(x, y, width, height);\n        });\n      }\n    }, 100);\n  };\n  useEffect(() => {\n    loadModels();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Webcam, {\n      ref: webcamRef,\n      onPlay: handleVideoOnPlay,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(MyFaceOverlayComponent, \"v4cpjlVQ0JCDZnPWaD3Z9DHNiTM=\");\n_c = MyFaceOverlayComponent;\nexport default MyFaceOverlayComponent;\nvar _c;\n$RefreshReg$(_c, \"MyFaceOverlayComponent\");","map":{"version":3,"names":["React","useRef","useEffect","Webcam","faceapi","jsxDEV","_jsxDEV","MyFaceOverlayComponent","_s","webcamRef","canvasRef","handleVideoOnPlay","setInterval","current","video","readyState","detections","detectAllFaces","TinyFaceDetectorOptions","withFaceLandmarks","ctx","getContext","width","videoWidth","height","videoHeight","clearRect","forEach","detection","x","y","box","strokeStyle","lineWidth","strokeRect","loadModels","children","ref","onPlay","style","display","fileName","_jsxFileName","lineNumber","columnNumber","position","top","left","_c","$RefreshReg$"],"sources":["C:/Users/dahne/Resume/soggy-bread/client/src/components/mirror/MyFaceOverlay.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport Webcam from 'react-webcam';\r\nimport * as faceapi from 'face-api.js';\r\n\r\nconst MyFaceOverlayComponent = () => {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  const handleVideoOnPlay = () => {\r\n    setInterval(async () => {\r\n      if (\r\n        webcamRef.current &&\r\n        webcamRef.current.video.readyState === 4\r\n      ) {\r\n        const video = webcamRef.current.video;\r\n        const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks();\r\n\r\n        // Get the context of the canvas\r\n        const ctx = canvasRef.current.getContext('2d');\r\n        canvasRef.current.width = video.videoWidth;\r\n        canvasRef.current.height = video.videoHeight;\r\n\r\n        // Clear the canvas\r\n        ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n\r\n        // Draw detections or overlay image based on detections\r\n        detections.forEach(detection => {\r\n          // Example: draw a rectangle around detected faces\r\n          // You would replace this with drawing your face image\r\n          const { x, y, width, height } = detection.detection.box;\r\n          ctx.strokeStyle = \"#ff0000\";\r\n          ctx.lineWidth = 2;\r\n          ctx.strokeRect(x, y, width, height);\r\n        });\r\n      }\r\n    }, 100);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadModels();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Webcam ref={webcamRef} onPlay={handleVideoOnPlay} style={{display: 'none'}} />\r\n      <canvas ref={canvasRef} style={{position: 'absolute', top: 0, left: 0}} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyFaceOverlayComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAO,KAAKC,OAAO,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAMC,SAAS,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMS,SAAS,GAAGT,MAAM,CAAC,IAAI,CAAC;EAE9B,MAAMU,iBAAiB,GAAGA,CAAA,KAAM;IAC9BC,WAAW,CAAC,YAAY;MACtB,IACEH,SAAS,CAACI,OAAO,IACjBJ,SAAS,CAACI,OAAO,CAACC,KAAK,CAACC,UAAU,KAAK,CAAC,EACxC;QACA,MAAMD,KAAK,GAAGL,SAAS,CAACI,OAAO,CAACC,KAAK;QACrC,MAAME,UAAU,GAAG,MAAMZ,OAAO,CAACa,cAAc,CAACH,KAAK,EAAE,IAAIV,OAAO,CAACc,uBAAuB,CAAC,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC;;QAEjH;QACA,MAAMC,GAAG,GAAGV,SAAS,CAACG,OAAO,CAACQ,UAAU,CAAC,IAAI,CAAC;QAC9CX,SAAS,CAACG,OAAO,CAACS,KAAK,GAAGR,KAAK,CAACS,UAAU;QAC1Cb,SAAS,CAACG,OAAO,CAACW,MAAM,GAAGV,KAAK,CAACW,WAAW;;QAE5C;QACAL,GAAG,CAACM,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEhB,SAAS,CAACG,OAAO,CAACS,KAAK,EAAEZ,SAAS,CAACG,OAAO,CAACW,MAAM,CAAC;;QAEtE;QACAR,UAAU,CAACW,OAAO,CAACC,SAAS,IAAI;UAC9B;UACA;UACA,MAAM;YAAEC,CAAC;YAAEC,CAAC;YAAER,KAAK;YAAEE;UAAO,CAAC,GAAGI,SAAS,CAACA,SAAS,CAACG,GAAG;UACvDX,GAAG,CAACY,WAAW,GAAG,SAAS;UAC3BZ,GAAG,CAACa,SAAS,GAAG,CAAC;UACjBb,GAAG,CAACc,UAAU,CAACL,CAAC,EAAEC,CAAC,EAAER,KAAK,EAAEE,MAAM,CAAC;QACrC,CAAC,CAAC;MACJ;IACF,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACdiC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE7B,OAAA;IAAA8B,QAAA,gBACE9B,OAAA,CAACH,MAAM;MAACkC,GAAG,EAAE5B,SAAU;MAAC6B,MAAM,EAAE3B,iBAAkB;MAAC4B,KAAK,EAAE;QAACC,OAAO,EAAE;MAAM;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/EtC,OAAA;MAAQ+B,GAAG,EAAE3B,SAAU;MAAC6B,KAAK,EAAE;QAACM,QAAQ,EAAE,UAAU;QAAEC,GAAG,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAC;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEV,CAAC;AAACpC,EAAA,CA5CID,sBAAsB;AAAAyC,EAAA,GAAtBzC,sBAAsB;AA8C5B,eAAeA,sBAAsB;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}