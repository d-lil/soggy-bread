{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dahne\\\\Resume\\\\soggy-bread\\\\client\\\\src\\\\components\\\\computer\\\\Github.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport FileViewer from './FileViewer'; // Import the FileViewer component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GitHub = () => {\n  _s();\n  const [repos, setRepos] = useState([]);\n  const [selectedRepo, setSelectedRepo] = useState(null);\n  const [selectedFilePath, setSelectedFilePath] = useState('');\n  useEffect(() => {\n    // Fetch the user's repositories on mount\n    axios.get('https://api.github.com/users/d-lil/repos').then(response => {\n      console.log('Repositories fetched:', response.data);\n      setRepos(response.data);\n    }).catch(error => {\n      console.error('Error fetching repos:', error);\n    });\n  }, []);\n  const handleRepoClick = repo => {\n    console.log('Repository clicked:', repo);\n    setSelectedRepo(repo);\n    setSelectedFilePath(''); // Reset the file path when a new repo is clicked\n  };\n\n  // Function to handle when a file is selected\n  const handleFileClick = filePath => {\n    console.log('File clicked:', filePath);\n    setSelectedFilePath(filePath);\n  };\n  console.log('Rendering GitHub component, selectedRepo:', selectedRepo, 'selectedFilePath:', selectedFilePath);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"GitHub Repositories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), selectedRepo == null ?\n    /*#__PURE__*/\n    // Render the list of repositories\n    _jsxDEV(\"div\", {\n      children: repos.map(repo => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleRepoClick(repo),\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: repo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)\n      }, repo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : selectedFilePath === '' ?\n    /*#__PURE__*/\n    // Render the FileViewer for the selected repository\n    // (You would create a new RepoContents component to list the contents here)\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Repository: \", selectedRepo.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedRepo(null),\n        children: \"Back to repositories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // Render the FileViewer for the selected file within the repository\n    _jsxDEV(FileViewer, {\n      repoFullName: selectedRepo.full_name,\n      filePath: selectedFilePath\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(GitHub, \"hOQCai0+EOxfWAcxW40tOGJzfPA=\");\n_c = GitHub;\nexport default GitHub;\nvar _c;\n$RefreshReg$(_c, \"GitHub\");","map":{"version":3,"names":["React","useEffect","useState","axios","FileViewer","jsxDEV","_jsxDEV","GitHub","_s","repos","setRepos","selectedRepo","setSelectedRepo","selectedFilePath","setSelectedFilePath","get","then","response","console","log","data","catch","error","handleRepoClick","repo","handleFileClick","filePath","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","name","id","repoFullName","full_name","_c","$RefreshReg$"],"sources":["C:/Users/dahne/Resume/soggy-bread/client/src/components/computer/Github.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport FileViewer from './FileViewer'; // Import the FileViewer component\r\n\r\nconst GitHub = () => {\r\n  const [repos, setRepos] = useState([]);\r\n  const [selectedRepo, setSelectedRepo] = useState(null);\r\n  const [selectedFilePath, setSelectedFilePath] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch the user's repositories on mount\r\n    axios.get('https://api.github.com/users/d-lil/repos')\r\n      .then(response => {\r\n        console.log('Repositories fetched:', response.data);\r\n        setRepos(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching repos:', error);\r\n      });\r\n  }, []);\r\n\r\n  const handleRepoClick = (repo) => {\r\n    console.log('Repository clicked:', repo);\r\n    setSelectedRepo(repo);\r\n    setSelectedFilePath(''); // Reset the file path when a new repo is clicked\r\n  };\r\n\r\n  // Function to handle when a file is selected\r\n  const handleFileClick = (filePath) => {\r\n    console.log('File clicked:', filePath);\r\n    setSelectedFilePath(filePath);\r\n  };\r\n\r\n  console.log('Rendering GitHub component, selectedRepo:', selectedRepo, 'selectedFilePath:', selectedFilePath);\r\n\r\n  return (\r\n    <div>\r\n      <h2>GitHub Repositories</h2>\r\n      {selectedRepo == null ? (\r\n        // Render the list of repositories\r\n        <div>\r\n          {repos.map(repo => (\r\n            <div key={repo.id} onClick={() => handleRepoClick(repo)}>\r\n              <h3>{repo.name}</h3>\r\n              {/* ... other repo info ... */}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : selectedFilePath === '' ? (\r\n        // Render the FileViewer for the selected repository\r\n        // (You would create a new RepoContents component to list the contents here)\r\n        <div>\r\n          <h3>Repository: {selectedRepo.name}</h3>\r\n          <button onClick={() => setSelectedRepo(null)}>Back to repositories</button>\r\n          {/* Here you would insert your RepoContents component */}\r\n        </div>\r\n      ) : (\r\n        // Render the FileViewer for the selected file within the repository\r\n        <FileViewer repoFullName={selectedRepo.full_name} filePath={selectedFilePath} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GitHub;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}